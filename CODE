#include <WiFi.h>
#include <Arduino.h>
#include "HX711.h"
#include "soc/rtc.h"
#define buzzer 5

const char* ssid = "Nanda";
const char* password = "nandapk0228";
const char* host = "192.168.88.86"; 

WiFiClient client;

const int LOADCELL_DOUT_PIN = 23;
const int LOADCELL_SCK_PIN = 22;

HX711 scale;

void setup() {
  pinMode(buzzer,OUTPUT);
  Serial.begin(115200);
  delay(1000);

  Serial.println();
  Serial.println("Connecting to WiFi network...");

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  rtc_cpu_freq_config_t config;
  rtc_clk_cpu_freq_get_config(&config);
  rtc_clk_cpu_freq_to_config(RTC_CPU_FREQ_80M, &config);
  rtc_clk_cpu_freq_set_config_fast(&config);

  Serial.println("Initializing the scale");

  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);

  scale.set_scale(-96.61);
  scale.tare();
}

void loop() {
  // Sample sensor data
  Serial.print("Weight reading:\t");
  int weight = scale.get_units();
  Serial.println(weight);

  // Establish a connection with the Python server
  if (!client.connected()) {
    Serial.print("Connecting to ");
    Serial.println(host);

    if (client.connect(host, 12345)) {
      Serial.println("Connected to server");
    } else {
      Serial.println("Connection failed");
      delay(5000);
      return;
    }
  }

  // Send sensor data to the Python server
  client.print(weight);
  if(weight >= 2000)
  {
    digitalWrite(buzzer,HIGH);
  }
  else
  {
    digitalWrite(buzzer,LOW);
  }

  scale.power_down();// put the ADC in sleep mode
  delay(1000);
  scale.power_up();// Adjust delay as needed
}
